/**
 * Copyright (c) 2011 Alexander De Leon Battista
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.dumontierlab.pdb2rdf.tools.rdf;

/**
 * This program will consume the unknown_residue.log file and generate the appropiate java code to put into PDBOwlVocabulary.java and ResidueTable.java
 * 
 */
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import org.apache.commons.io.FileUtils;

import com.dumontierlab.pdb2rdf.tools.bin.Pdb2RdfUnknownResidueParser;
import com.dumontierlab.pdb2rdf.util.UriUtil;

/**
 * @author Alexander De Leon
 * @author Jose Cruz-Toledo
 */
public class PdbOwlVocabularyGenerator {

	/**
	 * Unique residue map. Key is the iupac name and the value is also the iupac name of the residue
	 */
	static HashMap<String, String> residueMap;
	/**
	 * The input unknown residue log file produced by pdb2rdf
	 */
	static File inputFile;
	/**
	 * The unknown residue parser
	 */
	static Pdb2RdfUnknownResidueParser resParser;
	
	static List<String> residueTableLines;
	
	static List<String> pdbOwlVocabularyLines;

	public PdbOwlVocabularyGenerator() {
	}

	/**
	 * 
	 * @param aFile the unknown_residue.log file
	 */
	public PdbOwlVocabularyGenerator(File aFile) {
		this();
		resParser = new Pdb2RdfUnknownResidueParser();
		residueMap = makeResidueHash(aFile);
		residueTableLines = createResidueTableLines(residueMap);
		pdbOwlVocabularyLines = createPdbOwlVocabularyLines(residueMap);
	}	
	/**
	 * Create a HashMap with the following key/val pair:
	 * key: a Hashed version of the IUPAC name of the residue, preceeded by the letter "v"
	 * @param aFile
	 * @return a HashMap with a hashed version of the 
	 */
	public static HashMap<String, String> makeResidueHash(File aFile) {
		HashMap<String, String> missingEntries = resParser.cleanUnknownResidues(aFile);
		Iterator<String> it = missingEntries.keySet().iterator();
		HashMap<String, String> x = new HashMap<String, String>();
		
		while (it.hasNext()) {
			String k = it.next();
			String encodeme = UriUtil.replacePrimes(UriUtil.toCamelCase(k));
			String hash = UriUtil.makeHash(encodeme);
			x.put("v" + hash, k);
		}
		return x;
	}

	/**
	 * Create the lines that are to go in ResidueTable.java
	 * Pattern: put("IUPACNIOExceptionAME", PdbOwlVocabulary.Class.HASH);
	 * @param hm the HashMap generated by makeResidueHash(File)
	 * @return a list with the lines that will go in PdbOwlVocabulary.java
	 */
	public List<String> createResidueTableLines(HashMap<String, String> hm){
		List<String> returnMe = new ArrayList<String>();
		Iterator <String>it = hm.keySet().iterator();
		while(it.hasNext()){
			String line = "";
			String k = it.next();
			String v = hm.get(k);
			line += "put(\""+v+"\", PdbOwlVocabulary.Class."+k+");";
			returnMe.add(line);
		}
		return returnMe;
	}
	/**
	 * Create the lines that are to go in PdbOwlVocabulary.java
	 * Pattern: HASH(DEFAULT_NAMESPACE+"ENCODEDIUPACNAME")
	 * @param hm the HashMap generated by makeResidueHash(File)
	 * @return a list with the lines that will go in PdbOwlVocabulary.java
	 */
	public List<String> createPdbOwlVocabularyLines(HashMap<String, String> hm){
		List<String> returnMe = new ArrayList<String>();
		Iterator <String>it = hm.keySet().iterator();
		while(it.hasNext()){
			String line = "";
			String k = it.next();
			String v = hm.get(k);
			line += k+"(DEFAULT_NAMESPACE +\""+UriUtil.urlEncode(v)+"\"),";
			returnMe.add(line);
		}
		return returnMe;
	}
	
	/**
	 * Write the List<String> passed in to a file named filename
	 * @param filename
	 * @param aList
	 */
	public void printLines(File outputFile, List<String> aList){
		try {
			FileUtils.writeLines(outputFile, aList);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	

	
	/**
	 * @return the residueMap
	 */
	public static HashMap<String, String> getResidueMap() {
		return residueMap;
	}


	/**
	 * @param residueMap the residueMap to set
	 */
	public static void setResidueMap(HashMap<String, String> residueMap) {
		PdbOwlVocabularyGenerator.residueMap = residueMap;
	}


	/**
	 * @return the inputFile
	 */
	public static File getInputFile() {
		return inputFile;
	}


	/**
	 * @param inputFile the inputFile to set
	 */
	public static void setInputFile(File inputFile) {
		PdbOwlVocabularyGenerator.inputFile = inputFile;
	}

	

	/**
	 * @return the residueTableLines
	 */
	public static List<String> getResidueTableLines() {
		return residueTableLines;
	}

	/**
	 * @param residueTableLines the residueTableLines to set
	 */
	public static void setResidueTableLines(List<String> residueTableLines) {
		PdbOwlVocabularyGenerator.residueTableLines = residueTableLines;
	}

	/**
	 * @return the pdbOwlVocabularyLines
	 */
	public static List<String> getPdbOwlVocabularyLines() {
		return pdbOwlVocabularyLines;
	}

	/**
	 * @param pdbOwlVocabularyLines the pdbOwlVocabularyLines to set
	 */
	public static void setPdbOwlVocabularyLines(List<String> pdbOwlVocabularyLines) {
		PdbOwlVocabularyGenerator.pdbOwlVocabularyLines = pdbOwlVocabularyLines;
	}

	/**
	 * @return the resParser
	 */
	public Pdb2RdfUnknownResidueParser getResParser() {
		return resParser;
	}


	/**
	 * @param resParser the resParser to set
	 */
	public void setResParser(Pdb2RdfUnknownResidueParser resParser) {
		this.resParser = resParser;
	}


	public static void createResiduePdbOwlVocabularyLine(String residueName) {

	}

	public static void createResidueResidueTableLine(String residueName) {

	}

}
